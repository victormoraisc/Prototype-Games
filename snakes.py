#////////////////////////////////////////////////////////////////////////////////////////////////////
#Importação de todas as funções necessárias para o jogo da cobrinha
#////////////////////////////////////////////////////////////////////////////////////////////////////

import pygame
from pygame.locals import *
from sys import exit
from random import randint
from pygame.sprite import collide_rect

#////////////////////////////////////////////////////////////////////////////////////////////////////
#Inicio das funções
#////////////////////////////////////////////////////////////////////////////////////////////////////

pygame.init
pygame.font.init()
pygame.mixer.init()

#////////////////////////////////////////////////////////////////////////////////////////////////////
#Declaração das variáveis iniciais do jogo
#////////////////////////////////////////////////////////////////////////////////////////////////////

l_tela = 600
a_tela = 600

l_cobra = 20
a_cobra = 20

l_comida = 20
a_comida = 20

cobra_x = 300 
cobra_y = 300 

velocidade = 20
inercia_x = velocidade
inercia_y = 0

comprimento_cobra = []
comprimento_inicial = 5

coordenadas_comida = randint(1, 29)
comida_x = coordenadas_comida*20
comida_y = coordenadas_comida*20

fonte = pygame.font.SysFont('arial', 40, True, False)

pontos = 0

#////////////////////////////////////////////////////////////////////////////////////////////////////
#Declaração das cores 
#////////////////////////////////////////////////////////////////////////////////////////////////////

red   = (255, 0, 0)
blue  = (0, 0, 255)
black = (0, 0, 0)
white = (255, 255, 255)

#////////////////////////////////////////////////////////////////////////////////////////////////////
#Declaração da tela 
#////////////////////////////////////////////////////////////////////////////////////////////////////

tela = pygame.display.set_mode((l_tela, a_tela))

#////////////////////////////////////////////////////////////////////////////////////////////////////
#Relógio do Jogo 
#////////////////////////////////////////////////////////////////////////////////////////////////////

relogio = pygame.time.Clock()

#////////////////////////////////////////////////////////////////////////////////////////////////////
#Sons do jogo
#////////////////////////////////////////////////////////////////////////////////////////////////////

som_colisao = pygame.mixer.Sound('comida.wav')

pygame.mixer.music.set_volume(0.5)
musica = pygame.mixer.music.load('main_song.mp3')
pygame.mixer.music.play(-1)

#////////////////////////////////////////////////////////////////////////////////////////////////////
#Nome da tela do jogo
#////////////////////////////////////////////////////////////////////////////////////////////////////

pygame.display.set_caption('Jogo da Cobrinha')

#////////////////////////////////////////////////////////////////////////////////////////////////////
#Funções básicas do jogo
#////////////////////////////////////////////////////////////////////////////////////////////////////

def aumenta_cobra(comprimento_cobra):
    for XeY in comprimento_cobra:
        pygame.draw.rect(tela, red, (XeY[0], XeY[1], l_cobra, a_cobra))

def reiniciar_jogo():
    global pontos, comprimento_inicial, cobra_x, cobra_y, comida_x, comida_y, morte, comprimento_cobra
    pontos = 0
    comprimento_inicial = 5
    cobra_x = 300 
    cobra_y = 300 
    comida_x = coordenadas_comida*20
    comida_y = coordenadas_comida*20
    morte = False
    tela.fill (black)
    comprimento_cobra = []

#////////////////////////////////////////////////////////////////////////////////////////////////////
#Loop Principal do Jogo
#////////////////////////////////////////////////////////////////////////////////////////////////////

while True:

#////////////////////////////////////////////////////////////////////////////////////////////////////
#Scoreboard do Jogo
#////////////////////////////////////////////////////////////////////////////////////////////////////

    mensagem = f'pontos: {pontos}'
    texto_formatado = fonte.render(mensagem, False, white)
    
#////////////////////////////////////////////////////////////////////////////////////////////////////
#Relógio principal do jogo
#////////////////////////////////////////////////////////////////////////////////////////////////////

    relogio.tick(15)

#////////////////////////////////////////////////////////////////////////////////////////////////////
#Reset da tela para preto para eliminar fantasmas
#////////////////////////////////////////////////////////////////////////////////////////////////////
    
    tela.fill(black)

#////////////////////////////////////////////////////////////////////////////////////////////////////
#Loop for responsável por fechar o jogo 
#////////////////////////////////////////////////////////////////////////////////////////////////////

    for event in pygame.event.get():
        if event.type == QUIT:
            pygame.quit()
            exit()

#////////////////////////////////////////////////////////////////////////////////////////////////////
#Controles do jogo
#////////////////////////////////////////////////////////////////////////////////////////////////////

        if event.type == KEYDOWN:
            if event.key == K_UP and inercia_y != velocidade:
                inercia_x = 0
                inercia_y = -velocidade
                
            if event.key == K_LEFT and inercia_x != velocidade:
                inercia_y = 0
                inercia_x = -velocidade
            
            if event.key == K_DOWN and inercia_y != (-velocidade):
                inercia_x = 0
                inercia_y = velocidade

            if event.key == K_RIGHT and inercia_x != (-velocidade):
                inercia_y = 0
                inercia_x = velocidade

            if event.key == K_ESCAPE :
                relogio = relogio.tick(0)

#////////////////////////////////////////////////////////////////////////////////////////////////////
#Parte responsável por adicionar o movimento constante para a cobra
#////////////////////////////////////////////////////////////////////////////////////////////////////

    cobra_x = cobra_x + inercia_x
    cobra_y = cobra_y + inercia_y


#////////////////////////////////////////////////////////////////////////////////////////////////////
#Parter responsável por fazer a cobra atravessar a tela e voltar para o começo
#////////////////////////////////////////////////////////////////////////////////////////////////////

    if cobra_x >= l_tela:
       cobra_x = 0

    if cobra_x < 0:
       cobra_x = l_tela

    if cobra_y >= a_tela:
       cobra_y = 0
    
    if cobra_y < 0:
       cobra_y = a_tela

#////////////////////////////////////////////////////////////////////////////////////////////////////
#Objetos, no caso a cobra e a comida
#////////////////////////////////////////////////////////////////////////////////////////////////////

    cobra  = pygame.draw.rect(tela, red,  (cobra_x, cobra_y, l_cobra, a_cobra))
    comida = pygame.draw.rect(tela, blue, (comida_x, comida_y, l_comida, a_comida))

#////////////////////////////////////////////////////////////////////////////////////////////////////
#Sistema que detecta a colisão da cobra com a comida e redefine a posição da comida
#////////////////////////////////////////////////////////////////////////////////////////////////////

    coordenadas_comida = randint(1, 29)
    if cobra.colliderect(comida):
       comida_x = coordenadas_comida*20
       comida_y = coordenadas_comida*20
       pontos += 1
       comprimento_inicial += 1
       som_colisao.play()

#////////////////////////////////////////////////////////////////////////////////////////////////////
#Parte responsável por armazenar a posição passada da cabeça
#////////////////////////////////////////////////////////////////////////////////////////////////////

    cabeca = []
    cabeca.append(cobra_x)
    cabeca.append(cobra_y)

#////////////////////////////////////////////////////////////////////////////////////////////////////
#Parte responsável por armazenar a posição atual da comida
#////////////////////////////////////////////////////////////////////////////////////////////////////

    local_comida = []
    local_comida.append(comida_x)
    local_comida.append(comida_y)

#////////////////////////////////////////////////////////////////////////////////////////////////////
#Parte responsável por armazenar a lista da cabeça no comprimento da cobra
#////////////////////////////////////////////////////////////////////////////////////////////////////

    comprimento_cobra.append(cabeca)
    aumenta_cobra(comprimento_cobra)

#////////////////////////////////////////////////////////////////////////////////////////////////////
#Parte responsável por matar a cobra e resetar o jogo
#////////////////////////////////////////////////////////////////////////////////////////////////////

    if comprimento_cobra.count(cabeca) > 1:
        morte = True
        fonte_game_over = pygame.font.SysFont('arial', 20, True, False)
        game_over = 'Fim de Jogo! Pressione a tecla R para jogar novamente'
        mensagem_game_over = fonte_game_over.render(game_over, False, white)
        ret_texto = mensagem_game_over.get_rect()

        while morte:
            tela.fill(black)
            for event in pygame.event.get():
                if event.type == QUIT:
                   exit()
                if event.type == KEYDOWN:
                    if event.key == K_r:
                        reiniciar_jogo()
            ret_texto.center = (a_tela//2, l_tela//2)
            tela.blit(mensagem_game_over, ret_texto)
            pygame.display.update()

#////////////////////////////////////////////////////////////////////////////////////////////////////
#Parte responsável por detectar a geração da comida dentro do comprimento da cobra e redefinir a
#posição da cobra para uma posição aleatória
#////////////////////////////////////////////////////////////////////////////////////////////////////

    if comprimento_cobra.count(local_comida) >= 1:
        comida_x = coordenadas_comida*20
        comida_y = coordenadas_comida*20

#////////////////////////////////////////////////////////////////////////////////////////////////////
#Parte responsável por deletar as partes anteriores da cobra maior que o comprimento que deveria
#////////////////////////////////////////////////////////////////////////////////////////////////////
    
    if len(comprimento_cobra) > comprimento_inicial:
        del comprimento_cobra[0]
    
#////////////////////////////////////////////////////////////////////////////////////////////////////
#Parte responsável por exibir o Scoreboard
#////////////////////////////////////////////////////////////////////////////////////////////////////

    tela.blit(texto_formatado,(430, 10))

    pygame.display.update()